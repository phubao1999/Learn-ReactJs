{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","components/layout/Footter.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","display","justifyContent","textDecoration","_this","props","todo","completed","markComplete","e","console","log","_this$props$todo","this","title","id","react_default","a","createElement","style","type","onChange","bind","marginLeft","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","key","Header","headerStyle","react_router_dom","linkStyle","to","textAlign","AddTodo","state","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","addTodo","flex","placeholder","className","About","Fragment","Footter","footStyle","App","axios","delete","concat","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","pros","components_AddTodo","components_Todos","component","layout_Footter","React","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee2936b0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\r\n    };\r\n  };\r\n\r\n  markComplete = e => {\r\n    console.log(this.props);\r\n  };\r\n\r\n  render() {\r\n    const { title, id } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={this.props.markComplete.bind(this, id)}\r\n        />{\" \"}\r\n        <h3\r\n          style={{\r\n            marginLeft: \"5px\"\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {title}{\" \"}\r\n        </h3>{\" \"}\r\n        <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\r\n          X{\" \"}\r\n        </button>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todos: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst btnStyle = {\r\n  background: \"#ff0000\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px 10px\",\r\n  borderRadius: \"50%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\"\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map(todo => (\r\n      <TodoItem\r\n        key={todo.id}\r\n        todo={todo}\r\n        markComplete={this.props.markComplete}\r\n        delTodo={this.props.delTodo}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header style={headerStyle}>\r\n                <h1>Todo List</h1>\r\n                <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({\r\n        [e.target.name]: e.target.value \r\n    });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title: ''});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\r\n                <input \r\n                    style={{flex: '10', padding: '5px'}}\r\n                    type=\"text\" \r\n                    name=\"title\"\r\n                    placeholder=\"Add Todo....\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className=\"btn\"\r\n                    style={{flex: '1'}}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\r\n\r\nfunction About(){\r\n    return(\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This Is The TodoList App v1.0.0. It's Part Of A React Crash Course</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Footter extends Component {\r\n    render() {\r\n        return (\r\n            <footer style={footStyle}>\r\n                <div>\r\n                    Devloper By Phù Tường Bảo\r\n                </div>\r\n                <div>\r\n                    Contact: 0921006940\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nconst footStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n}\r\n\r\nexport default Footter;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport Footter from \"./components/layout/Footter\";\n// import uuid from 'uuid';\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  // Toggle Complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  // Delete Todo Item\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n\n  // Add Todo\n  addTodo = title => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false\n      })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={pros => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n          <Footter />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}